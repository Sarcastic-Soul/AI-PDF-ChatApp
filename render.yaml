# 1. Define the shared environment variable group for secrets first.
envVarGroups:
  - name: api-keys
    envVars:
      - key: OPENROUTER_API_KEY
        sync: false # Set the value in the Render dashboard
      - key: HF_API_KEY
        sync: false # Set the value in the Render dashboard

# 2. Define all the services your application needs.
services:
  # Valkey (Redis) service
  - type: redis
    name: valkey
    ipAllowList: [] # Allows other Render services to connect
    plan: free

  # Qdrant vector store service
  - type: web
    name: qdrant
    env: docker
    dockerfilePath: ./qdrant/Dockerfile
    plan: free
    # Attach the persistent disk defined below
    disk:
      name: qdrant-data
      mountPath: /qdrant/storage

  # Backend API Service
  - type: web
    name: backend
    env: docker
    dockerfilePath: ./backend/Dockerfile
    plan: free
    healthCheckPath: /
    envVars:
      - key: QDRANT_URL
        value: http://qdrant:6333
      - key: REDIS_URL
        fromService:
          type: redis
          name: valkey
          property: connectionString
    # Apply the shared secret group
    envVarGroups:
      - api-keys

  # Background Worker Service
  - type: worker
    name: worker
    env: docker
    dockerfilePath: ./backend/worker.Dockerfile
    plan: free
    envVarGroups:
      - api-keys # Apply the shared secret group
    envVars:
      - key: QDRANT_URL
        value: http://qdrant:6333
      - key: REDIS_URL
        fromService:
          type: redis
          name: valkey
          property: connectionString

  # Frontend Web Service
  - type: web
    name: frontend
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    plan: free

# 3. Define the persistent disk for the Qdrant service.
databases:
  - name: qdrant-data
    disk:
      sizeGB: 1