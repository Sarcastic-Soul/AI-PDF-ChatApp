services:
  # 1. Valkey (Redis) service for our BullMQ queue
  - type: redis
    name: valkey
    ipAllowList: [] # Allows other Render services to connect
    plan: free

  # 2. Qdrant vector store service
  - type: web
    name: qdrant
    env: docker
    dockerfilePath: ./qdrant/Dockerfile
    plan: free
    disks:
      - name: qdrant-data
        mountPath: /qdrant/storage
        sizeGB: 1

  # 3. Backend API Service
  - type: web
    name: backend
    env: docker
    dockerfilePath: ./backend/Dockerfile
    plan: free
    healthCheckPath: /
    envVars:
      - key: QDRANT_URL
        value: http://qdrant:6333
      - key: REDIS_URL
        fromService:
          type: redis
          name: valkey
          property: connectionString
    # Secrets are now defined in an 'envVarGroup'
    envVarGroups:
      - name: api-keys
        sync: true

  # 4. Background Worker Service
  - type: worker
    name: worker
    env: docker
    dockerfilePath: ./backend/worker.Dockerfile
    plan: free
    envVars:
      - key: QDRANT_URL
        value: http://qdrant:6333
      - key: REDIS_URL
        fromService:
          type: redis
          name: valkey
          property: connectionString
    # The worker will use the same secret group as the backend
    envVarGroups:
      - name: api-keys
        sync: true

  # 5. Frontend Web Service
  - type: web
    name: frontend
    env: docker
    dockerfilePath: ./frontend/Dockerfile
    plan: free

# Define the secret group that the backend and worker will share
envVarGroups:
  - name: api-keys
    envVars:
      - key: OPENROUTER_API_KEY
        sync: false # Set this in the Render dashboard
      - key: HF_API_KEY
        sync: false # Set this in the Render dashboard